{"version":3,"sources":["components/ColorPicker/ColorPicker.js","components/Counter/Counter.js","App.js","index.js","components/Counter/Counter.module.css","components/ColorPicker/ColorPicker.module.css"],"names":["ColorPicker","state","activeColorIndx","activeColorStyle","index","defaultStyle","styles","colorItem","push","activeColor","join","setActiveColor","setState","this","colors","props","label","className","colorList","map","color","style","backgroundColor","onClick","Component","Counter","value","initialValue","handleIncrement","prevState","handleDecrement","container","containerButton","type","counterButton","colorPickerOptions","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mOA4CeA,E,4MAxCbC,MAAQ,CACNC,gBAAiB,G,EAGnBC,iBAAmB,SAACC,GAClB,IAAMC,EAAe,CAACC,IAAOC,WAI7B,OAHIH,IAAU,EAAKH,MAAMC,iBACvBG,EAAaG,KAAKF,IAAOG,aAEpBJ,EAAaK,KAAK,M,EAG3BC,eAAiB,SAACP,GAChB,EAAKQ,SAAS,CAAEV,gBAAiBE,K,4CAGnC,WAAU,IAAD,OACCF,EAAoBW,KAAKZ,MAAzBC,gBACAY,EAAWD,KAAKE,MAAhBD,OACAE,EAAUF,EAAOZ,GAAjBc,MACR,OACE,gCACE,8CACA,2CAAcA,KACd,oBAAIC,UAAWX,IAAOY,UAAtB,SACGJ,EAAOK,KAAI,WAAmBf,GAAnB,IAAGY,EAAH,EAAGA,MAAOI,EAAV,EAAUA,MAAV,OACV,6BACE,wBACEC,MAAO,CAAEC,gBAAiBF,GAC1BH,UAAW,EAAKd,iBAAiBC,GACjCmB,QAAS,kBAAM,EAAKZ,eAAeP,OAJ9BY,e,GA3BKQ,a,gBCqCXC,E,4MArCbxB,MAAQ,CACNyB,MAAO,EAAKX,MAAMY,c,EAEpBC,gBAAkB,WAChB,EAAKhB,UAAS,SAACiB,GAAD,MAAgB,CAAEH,MAAOG,EAAUH,MAAQ,O,EAE3DI,gBAAkB,WAChB,EAAKlB,UAAS,SAACiB,GAAD,MAAgB,CAAEH,MAAOG,EAAUH,MAAQ,O,4CAG3D,WACE,OACE,sBAAKT,UAAWI,IAAMU,UAAtB,UACE,yCAEA,mBAAGd,UAAWI,IAAMK,MAApB,SAA4Bb,KAAKZ,MAAMyB,QACvC,sBAAKT,UAAWI,IAAMW,gBAAtB,UACE,wBACEC,KAAK,SACLV,QAASV,KAAKe,gBACdX,UAAWI,IAAMa,cAHnB,mFAOA,wBACED,KAAK,SACLV,QAASV,KAAKiB,gBACdb,UAAWI,IAAMa,cAHnB,6F,GAzBYV,aCEhBW,EAAqB,CACzB,CAAEnB,MAAO,MAAOI,MAAO,WACvB,CAAEJ,MAAO,QAASI,MAAO,WACzB,CAAEJ,MAAO,OAAQI,MAAO,WACxB,CAAEJ,MAAO,OAAQI,MAAO,WACxB,CAAEJ,MAAO,OAAQI,MAAO,WACxB,CAAEJ,MAAO,SAAUI,MAAO,YAYbgB,EATH,WACV,OACE,qCACE,cAAC,EAAD,CAAatB,OAAQqB,IACrB,cAAC,EAAD,CAASR,aAAc,QCb7BU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,MAAQ,uBAAuB,UAAY,2BAA2B,gBAAkB,mC,kBCAzJD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,UAAY,+BAA+B,YAAc,oC","file":"static/js/main.e4629f2e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"./ColorPicker.module.css\";\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    activeColorIndx: 0,\r\n  };\r\n\r\n  activeColorStyle = (index) => {\r\n    const defaultStyle = [styles.colorItem];\r\n    if (index === this.state.activeColorIndx) {\r\n      defaultStyle.push(styles.activeColor);\r\n    }\r\n    return defaultStyle.join(\" \");\r\n  };\r\n\r\n  setActiveColor = (index) => {\r\n    this.setState({ activeColorIndx: index });\r\n  };\r\n\r\n  render() {\r\n    const { activeColorIndx } = this.state;\r\n    const { colors } = this.props;\r\n    const { label } = colors[activeColorIndx];\r\n    return (\r\n      <div>\r\n        <h2>Color Picker</h2>\r\n        <span>Color: {label}</span>\r\n        <ul className={styles.colorList}>\r\n          {colors.map(({ label, color }, index) => (\r\n            <li key={label}>\r\n              <button\r\n                style={{ backgroundColor: color }}\r\n                className={this.activeColorStyle(index)}\r\n                onClick={() => this.setActiveColor(index)}\r\n              ></button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { Component } from \"react\";\r\nimport style from \"./Counter.module.css\";\r\nclass Counter extends Component {\r\n  state = {\r\n    value: this.props.initialValue,\r\n  };\r\n  handleIncrement = () => {\r\n    this.setState((prevState) => ({ value: prevState.value + 1 }));\r\n  };\r\n  handleDecrement = () => {\r\n    this.setState((prevState) => ({ value: prevState.value - 1 }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.container}>\r\n        <h2>Counter</h2>\r\n\r\n        <p className={style.value}>{this.state.value}</p>\r\n        <div className={style.containerButton}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleIncrement}\r\n            className={style.counterButton}\r\n          >\r\n            Увеличить на 1\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleDecrement}\r\n            className={style.counterButton}\r\n          >\r\n            Уменьшить на 1\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\nimport Counter from \"./components/Counter/Counter\";\r\n\r\nconst colorPickerOptions = [\r\n  { label: \"red\", color: \"#F44336\" },\r\n  { label: \"green\", color: \"#4CAF50\" },\r\n  { label: \"blue\", color: \"#2196F3\" },\r\n  { label: \"grey\", color: \"#607D8B\" },\r\n  { label: \"pink\", color: \"#E91E63\" },\r\n  { label: \"indigo\", color: \"#3F51B5\" },\r\n];\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ColorPicker colors={colorPickerOptions} />\r\n      <Counter initialValue={0} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterButton\":\"Counter_counterButton__322EI\",\"value\":\"Counter_value__1ocFq\",\"container\":\"Counter_container__30TX2\",\"containerButton\":\"Counter_containerButton__1QQkN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorList\":\"ColorPicker_colorList__WzOC-\",\"colorItem\":\"ColorPicker_colorItem__HLyw3\",\"activeColor\":\"ColorPicker_activeColor__1Qf1g\"};"],"sourceRoot":""}